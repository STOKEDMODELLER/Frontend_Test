-e 
--- FILE: ./src/App.js ---

import React from 'react';
import { BrowserRouter } from 'react-router-dom';
import AppRoutes from './routes';

const App = () => (
  <BrowserRouter>
    <AppRoutes />
  </BrowserRouter>
);

export default App;
-e 
--- FILE: ./src/components/auth/Login.js ---

import React, { useState } from 'react';

const Login = () => {
  const [formData, setFormData] = useState({ email: '', password: '' });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('Login submitted', formData);
  };

  return (
    <div className="flex flex-col items-center justify-center h-screen bg-gray-50">
      <div className="w-full max-w-md p-8 bg-white shadow-lg rounded-lg">
        <h2 className="text-2xl font-bold text-gray-800 text-center mb-6">Login</h2>
        <form onSubmit={handleSubmit}>
          <div className="mb-4">
            <label htmlFor="email" className="block text-sm font-medium text-gray-700">
              Email
            </label>
            <input
              type="email"
              name="email"
              id="email"
              onChange={handleChange}
              required
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
            />
          </div>
          <div className="mb-6">
            <label htmlFor="password" className="block text-sm font-medium text-gray-700">
              Password
            </label>
            <input
              type="password"
              name="password"
              id="password"
              onChange={handleChange}
              required
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
            />
          </div>
          <button
            type="submit"
            className="w-full py-2 px-4 text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
          >
            Login
          </button>
        </form>
        <p className="mt-4 text-center text-sm text-gray-600">
          Don't have an account?{' '}
          <a href="/register" className="text-blue-500 hover:underline">
            Register here
          </a>
        </p>
      </div>
    </div>
  );
};

export default Login;
-e 
--- FILE: ./src/components/auth/Register.js ---

import React, { useState } from 'react';

const Register = () => {
  const [formData, setFormData] = useState({ name: '', email: '', password: '' });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('Register submitted', formData);
  };

  return (
    <div className="flex flex-col items-center justify-center h-screen bg-gray-50">
      <div className="w-full max-w-md p-8 bg-white shadow-lg rounded-lg">
        <h2 className="text-2xl font-bold text-gray-800 text-center mb-6">Register</h2>
        <form onSubmit={handleSubmit}>
          <div className="mb-4">
            <label htmlFor="name" className="block text-sm font-medium text-gray-700">
              Name
            </label>
            <input
              type="text"
              name="name"
              id="name"
              onChange={handleChange}
              required
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500"
            />
          </div>
          <div className="mb-4">
            <label htmlFor="email" className="block text-sm font-medium text-gray-700">
              Email
            </label>
            <input
              type="email"
              name="email"
              id="email"
              onChange={handleChange}
              required
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500"
            />
          </div>
          <div className="mb-6">
            <label htmlFor="password" className="block text-sm font-medium text-gray-700">
              Password
            </label>
            <input
              type="password"
              name="password"
              id="password"
              onChange={handleChange}
              required
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500"
            />
          </div>
          <button
            type="submit"
            className="w-full py-2 px-4 text-white bg-green-600 rounded-md hover:bg-green-700 focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
          >
            Register
          </button>
        </form>
        <p className="mt-4 text-center text-sm text-gray-600">
          Already have an account?{' '}
          <a href="/login" className="text-blue-500 hover:underline">
            Login here
          </a>
        </p>
      </div>
    </div>
  );
};

export default Register;
-e 
--- FILE: ./src/components/dashboard/AdminDashboard.js ---

import React from 'react';

const AdminDashboard = () => {
  return <div>Admin Dashboard</div>;
};

export default AdminDashboard;
-e 
--- FILE: ./src/components/dashboard/ApplicantDashboard.js ---

// src/components/dashboard/ApplicantDashboard.js
import React from 'react';

const ApplicantDashboard = () => {
  return <div>Applicant Dashboard</div>;
};

export default ApplicantDashboard;
-e 
--- FILE: ./src/components/dashboard/Dashboard.js ---

import React, { useEffect, useState } from 'react';
import axios from 'axios';
import AdminDashboard from './ApplicantDashboard';
import ReviewerDashboard from './ReviewerDashboard';
import ApplicantDashboard from './ApplicantDashboard';

const Dashboard = () => {
  const [user, setUser] = useState(null);

  useEffect(() => {
    // Fetch user data
    const fetchUser = async () => {
      const token = localStorage.getItem('token');
      if (!token) {
        // Redirect to login
        window.location.href = '/login';
        return;
      }
      try {
        const res = await axios.get('/api/auth/user', {
          headers: { 'x-auth-token': token },
        });
        setUser(res.data);
      } catch (err) {
        console.error(err.response.data);
        window.location.href = '/login';
      }
    };
    fetchUser();
  }, []);

  if (!user) return <div>Loading...</div>;

  switch (user.role) {
    case 'admin':
      return <AdminDashboard />;
    case 'reviewer':
      return <ReviewerDashboard />;
    case 'form_creator':
      return <FormCreatorDashboard />;
    case 'applicant':
      return <ApplicantDashboard />;
    default:
      return <div>Unauthorized</div>;
  }
};

export default Dashboard;
-e 
--- FILE: ./src/components/dashboard/ReviewerDashboard.js ---

import React from 'react';

const ReviewerDashboard = () => {
  return <div>Reviewer Dashboard</div>;
};

export default ReviewerDashboard;
-e 
--- FILE: ./src/components/forms/DynamicForm.js ---

import React, { useState, useEffect } from 'react';
import axios from 'axios';

const DynamicForm = () => {
  const [fields, setFields] = useState([]);
  const [formData, setFormData] = useState({});

  useEffect(() => {
    // Fetch form fields
    const fetchFields = async () => {
      try {
        const res = await axios.get('/api/forms');
        setFields(res.data);
      } catch (err) {
        console.error(err.response.data);
      }
    };
    fetchFields();
  }, []);

  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });

  const onSubmit = async e => {
    e.preventDefault();
    try {
      await axios.post('/api/applications', formData);
      // Handle success
    } catch (err) {
      console.error(err.response.data);
    }
  };

  const renderField = field => {
    switch (field.type) {
      case 'text':
        return (
          <div key={field.name}>
            <label>{field.label}</label>
            <input type="text" name={field.name} onChange={onChange} required={field.required} />
          </div>
        );
      // Handle other field types
      default:
        return null;
    }
  };

  return (
    <form onSubmit={onSubmit}>
      {fields.map(field => field.visible && renderField(field))}
      <button type="submit">Submit Application</button>
    </form>
  );
};

export default DynamicForm;
-e 
--- FILE: ./src/components/forms/FormBuilder.js ---

import React, { useState, useEffect } from 'react';
import axios from 'axios';

const FormBuilder = () => {
  const [fields, setFields] = useState([]);

  useEffect(() => {
    // Fetch existing fields
    const fetchFields = async () => {
      try {
        const res = await axios.get('/api/forms');
        setFields(res.data);
      } catch (err) {
        console.error(err.response.data);
      }
    };
    fetchFields();
  }, []);

  const addField = async fieldData => {
    try {
      const res = await axios.post('/api/forms', fieldData);
      setFields([...fields, res.data]);
    } catch (err) {
      console.error(err.response.data);
    }
  };

  // Implement UI for adding fields
  return (
    <div>
      <h2>Form Builder</h2>
      {/* Implement form for adding fields */}
      {/* List existing fields */}
    </div>
  );
};

export default FormBuilder;
-e 
--- FILE: ./src/components/Layout.js ---

import React from 'react';

const Layout = ({ children }) => {
  return (
    <div className="min-h-screen bg-gray-100">
      <header className="bg-blue-600 text-white p-4">
        <h1 className="text-lg font-bold">My Platform</h1>
      </header>
      <main className="p-6">{children}</main>
      <footer className="bg-gray-800 text-white text-center p-4">
        &copy; {new Date().getFullYear()} My Platform. All rights reserved.
      </footer>
    </div>
  );
};

export default Layout;
-e 
--- FILE: ./src/index.js ---

// frontend/src/index.js
import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';
import './index.css';

ReactDOM.render(<App />, document.getElementById('root'));
-e 
--- FILE: ./src/pages/HomePage.js ---

import React from 'react';

const HomePage = () => {
  return (
    <div className="flex flex-col items-center justify-center h-screen bg-gray-100">
      <h1 className="text-4xl font-bold text-gray-800 mb-4">Welcome to SAT Platform</h1>
      <p className="text-lg text-gray-600 mb-6">
        A professional solution for managing your organisation's workflows.
      </p>
      <div className="flex space-x-4">
        <a
          href="/login"
          className="px-6 py-2 text-white bg-blue-500 rounded-md hover:bg-blue-600"
        >
          Login
        </a>
        <a
          href="/register"
          className="px-6 py-2 text-white bg-green-500 rounded-md hover:bg-green-600"
        >
          Register
        </a>
      </div>
    </div>
  );
};

export default HomePage;
-e 
--- FILE: ./src/pages/NotFoundPage.js ---

import React from 'react';

const NotFoundPage = () => {
  return <div>404 - Page Not Found</div>;
};

export default NotFoundPage;
-e 
--- FILE: ./src/pages/UnauthorizedPage.js ---

import React from 'react';

const UnauthorizedPage = () => {
  return <div>You are not authorized to access this page.</div>;
};

export default UnauthorizedPage;
-e 
--- FILE: ./src/routes.js ---

import React from 'react';
import { Routes, Route } from 'react-router-dom';
import HomePage from './pages/HomePage';
import NotFoundPage from './pages/NotFoundPage';
import UnauthorizedPage from './pages/UnauthorizedPage';
import Login from './components/auth/Login';
import Register from './components/auth/Register';
import Dashboard from './components/dashboard/Dashboard';
import Layout from './components/Layout';

const AppRoutes = () => (
  <Layout>
    <Routes>
      <Route path="/" element={<HomePage />} />
      <Route path="/login" element={<Login />} />
      <Route path="/register" element={<Register />} />
      <Route path="/dashboard" element={<Dashboard />} />
      <Route path="/unauthorized" element={<UnauthorizedPage />} />
      <Route path="*" element={<NotFoundPage />} />
    </Routes>
  </Layout>
);

export default AppRoutes;
-e 
--- FILE: ./src/utils/api.js ---

// frontend/src/utils/api.js
import axios from 'axios';

const api = axios.create({
  baseURL: '/api',
});

// Add a request interceptor
api.interceptors.request.use(
  config => {
    const token = localStorage.getItem('token');
    if (token) config.headers['x-auth-token'] = token;
    return config;
  },
  error => Promise.reject(error),
);

export default api;
-e 
--- FILE: ./tailwind.config.js ---

/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}", // Ensures Tailwind scans all files in the src directory
  ],
  theme: {
    extend: {},
  },
  plugins: [],
};
-e 
--- FILE: ./webpack.config.js ---

const path = require('path');

module.exports = {
  entry: './src/index.js',
  output: {
    path: path.resolve(__dirname, 'dist'),
    filename: 'bundle.js',
    publicPath: '/',
  },
  devServer: {
    historyApiFallback: false, // Ensures all unmatched routes serve index.html
    static: {
      directory: path.resolve(__dirname, 'public'),
    },
    hot: true,
    port: 3000,
    proxy: [
      {
        context: ['/api'], // Proxy API requests to the backend
        target: 'http://localhost:5000',
        changeOrigin: true,
      },
    ],
  },
  
  module: {
    rules: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
        },
      },
      {
        test: /\.css$/, // Rule to process CSS
        use: ['style-loader', 'css-loader', 'postcss-loader'],
      },
    ],
  },
};
